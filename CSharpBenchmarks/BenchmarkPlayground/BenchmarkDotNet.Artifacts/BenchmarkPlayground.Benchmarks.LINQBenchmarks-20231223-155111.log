// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 8 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in /Users/syphonphilter/Projects/BenchmarkPlayground/CSharpBenchmarks/BenchmarkPlayground/bin/Release/net8.0/4dde07fa-57fc-4211-8dd2-6c5e96e4241b
// command took 1.91 sec and exited with 0
// start dotnet  build -c Release --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in /Users/syphonphilter/Projects/BenchmarkPlayground/CSharpBenchmarks/BenchmarkPlayground/bin/Release/net8.0/4dde07fa-57fc-4211-8dd2-6c5e96e4241b
// command took 5.08 sec and exited with 0
// ***** Done, took 00:00:07 (7.1 sec)   *****
// Found 8 benchmarks:
//   LINQBenchmarks.withLinqQuery: Job-IRVNZL(IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0) [ArraySize=100]
//   LINQBenchmarks.withLinqSyntax: Job-IRVNZL(IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0) [ArraySize=100]
//   LINQBenchmarks.withLinqQuery: .NET 8.0(Runtime=.NET 8.0) [ArraySize=100]
//   LINQBenchmarks.withLinqSyntax: .NET 8.0(Runtime=.NET 8.0) [ArraySize=100]
//   LINQBenchmarks.withLinqQuery: Job-IRVNZL(IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0) [ArraySize=1000]
//   LINQBenchmarks.withLinqSyntax: Job-IRVNZL(IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0) [ArraySize=1000]
//   LINQBenchmarks.withLinqQuery: .NET 8.0(Runtime=.NET 8.0) [ArraySize=1000]
//   LINQBenchmarks.withLinqSyntax: .NET 8.0(Runtime=.NET 8.0) [ArraySize=1000]

// **************************
// Benchmark: LINQBenchmarks.withLinqQuery: Job-IRVNZL(IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0) [ArraySize=100]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 4dde07fa-57fc-4211-8dd2-6c5e96e4241b.dll --anonymousPipes 105 106 --benchmarkName "BenchmarkPlayground.Benchmarks.LINQBenchmarks.withLinqQuery(ArraySize: 100)" --job "IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0" --benchmarkId 0 in /Users/syphonphilter/Projects/BenchmarkPlayground/CSharpBenchmarks/BenchmarkPlayground/bin/Release/net8.0/4dde07fa-57fc-4211-8dd2-6c5e96e4241b/bin/Release/net8.0
// Failed to set up high priority (Permission denied). In order to run benchmarks with high priority, make sure you have the right permissions.
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.13.11
// Runtime=.NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: Job-MOBQFU(IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0)


// BeforeActualRun
WorkloadActual   1: 1 op, 1563832.00 ns, 1.5638 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 1563832.00 ns, 1.5638 ms/op
// GC:  0 0 0 840 1
// Threading:  0 0 1

// AfterAll
// Benchmark Process 68551 has exited with code 0.

Mean = 1.564 ms, StdErr = 0.000 ms (0.00%), N = 1, StdDev = 0.000 ms
Min = 1.564 ms, Q1 = 1.564 ms, Median = 1.564 ms, Q3 = 1.564 ms, Max = 1.564 ms
IQR = 0.000 ms, LowerFence = 1.564 ms, UpperFence = 1.564 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// ** Remained 7 (87.5%) benchmark(s) to run. Estimated finish 2023-12-23 15:51 (0h 0m from now) **
// **************************
// Benchmark: LINQBenchmarks.withLinqSyntax: Job-IRVNZL(IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0) [ArraySize=100]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 4dde07fa-57fc-4211-8dd2-6c5e96e4241b.dll --anonymousPipes 107 108 --benchmarkName "BenchmarkPlayground.Benchmarks.LINQBenchmarks.withLinqSyntax(ArraySize: 100)" --job "IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0" --benchmarkId 1 in /Users/syphonphilter/Projects/BenchmarkPlayground/CSharpBenchmarks/BenchmarkPlayground/bin/Release/net8.0/4dde07fa-57fc-4211-8dd2-6c5e96e4241b/bin/Release/net8.0
// Failed to set up high priority (Permission denied). In order to run benchmarks with high priority, make sure you have the right permissions.
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.13.11
// Runtime=.NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: Job-QASWGA(IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0)


// BeforeActualRun
WorkloadActual   1: 1 op, 1558430.00 ns, 1.5584 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 1558430.00 ns, 1.5584 ms/op
// GC:  0 0 0 840 1
// Threading:  0 0 1

// AfterAll
// Benchmark Process 68555 has exited with code 0.

Mean = 1.558 ms, StdErr = 0.000 ms (0.00%), N = 1, StdDev = 0.000 ms
Min = 1.558 ms, Q1 = 1.558 ms, Median = 1.558 ms, Q3 = 1.558 ms, Max = 1.558 ms
IQR = 0.000 ms, LowerFence = 1.558 ms, UpperFence = 1.558 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// ** Remained 6 (75.0%) benchmark(s) to run. Estimated finish 2023-12-23 15:51 (0h 0m from now) **
// **************************
// Benchmark: LINQBenchmarks.withLinqQuery: .NET 8.0(Runtime=.NET 8.0) [ArraySize=100]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 4dde07fa-57fc-4211-8dd2-6c5e96e4241b.dll --anonymousPipes 107 108 --benchmarkName "BenchmarkPlayground.Benchmarks.LINQBenchmarks.withLinqQuery(ArraySize: 100)" --job ".NET 8.0" --benchmarkId 2 in /Users/syphonphilter/Projects/BenchmarkPlayground/CSharpBenchmarks/BenchmarkPlayground/bin/Release/net8.0/4dde07fa-57fc-4211-8dd2-6c5e96e4241b/bin/Release/net8.0
// Failed to set up high priority (Permission denied). In order to run benchmarks with high priority, make sure you have the right permissions.
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.13.11
// Runtime=.NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: .NET 8.0

OverheadJitting  1: 1 op, 401351.00 ns, 401.3510 us/op
WorkloadJitting  1: 1 op, 1240336.00 ns, 1.2403 ms/op

OverheadJitting  2: 16 op, 326301.00 ns, 20.3938 us/op
WorkloadJitting  2: 16 op, 337280.00 ns, 21.0800 us/op

WorkloadPilot    1: 16 op, 5669.00 ns, 354.3125 ns/op
WorkloadPilot    2: 32 op, 7705.00 ns, 240.7812 ns/op
WorkloadPilot    3: 64 op, 8885.00 ns, 138.8281 ns/op
WorkloadPilot    4: 128 op, 13647.00 ns, 106.6172 ns/op
WorkloadPilot    5: 256 op, 23232.00 ns, 90.7500 ns/op
WorkloadPilot    6: 512 op, 41272.00 ns, 80.6094 ns/op
WorkloadPilot    7: 1024 op, 84267.00 ns, 82.2920 ns/op
WorkloadPilot    8: 2048 op, 192559.00 ns, 94.0229 ns/op
WorkloadPilot    9: 4096 op, 452093.00 ns, 110.3743 ns/op
WorkloadPilot   10: 8192 op, 992457.00 ns, 121.1495 ns/op
WorkloadPilot   11: 16384 op, 1865823.00 ns, 113.8808 ns/op
WorkloadPilot   12: 32768 op, 3849944.00 ns, 117.4910 ns/op
WorkloadPilot   13: 65536 op, 7523917.00 ns, 114.8059 ns/op
WorkloadPilot   14: 131072 op, 10533030.00 ns, 80.3606 ns/op
WorkloadPilot   15: 262144 op, 22886358.00 ns, 87.3045 ns/op
WorkloadPilot   16: 524288 op, 42411172.00 ns, 80.8929 ns/op
WorkloadPilot   17: 1048576 op, 83516176.00 ns, 79.6472 ns/op
WorkloadPilot   18: 2097152 op, 115961574.00 ns, 55.2948 ns/op
WorkloadPilot   19: 4194304 op, 190306939.00 ns, 45.3727 ns/op
WorkloadPilot   20: 8388608 op, 361242056.00 ns, 43.0634 ns/op
WorkloadPilot   21: 16777216 op, 716207781.00 ns, 42.6893 ns/op

OverheadWarmup   1: 16777216 op, 60924924.00 ns, 3.6314 ns/op
OverheadWarmup   2: 16777216 op, 61030969.00 ns, 3.6377 ns/op
OverheadWarmup   3: 16777216 op, 61145026.00 ns, 3.6445 ns/op
OverheadWarmup   4: 16777216 op, 46434711.00 ns, 2.7677 ns/op
OverheadWarmup   5: 16777216 op, 40998932.00 ns, 2.4437 ns/op
OverheadWarmup   6: 16777216 op, 41386915.00 ns, 2.4669 ns/op
OverheadWarmup   7: 16777216 op, 41214250.00 ns, 2.4566 ns/op

OverheadActual   1: 16777216 op, 41113315.00 ns, 2.4505 ns/op
OverheadActual   2: 16777216 op, 41205192.00 ns, 2.4560 ns/op
OverheadActual   3: 16777216 op, 41302484.00 ns, 2.4618 ns/op
OverheadActual   4: 16777216 op, 41109046.00 ns, 2.4503 ns/op
OverheadActual   5: 16777216 op, 41081250.00 ns, 2.4486 ns/op
OverheadActual   6: 16777216 op, 41070308.00 ns, 2.4480 ns/op
OverheadActual   7: 16777216 op, 41231597.00 ns, 2.4576 ns/op
OverheadActual   8: 16777216 op, 41139126.00 ns, 2.4521 ns/op
OverheadActual   9: 16777216 op, 41000919.00 ns, 2.4438 ns/op
OverheadActual  10: 16777216 op, 41145296.00 ns, 2.4525 ns/op
OverheadActual  11: 16777216 op, 41043561.00 ns, 2.4464 ns/op
OverheadActual  12: 16777216 op, 41192806.00 ns, 2.4553 ns/op
OverheadActual  13: 16777216 op, 41227740.00 ns, 2.4574 ns/op
OverheadActual  14: 16777216 op, 41250917.00 ns, 2.4587 ns/op
OverheadActual  15: 16777216 op, 41127777.00 ns, 2.4514 ns/op

WorkloadWarmup   1: 16777216 op, 703929483.00 ns, 41.9575 ns/op
WorkloadWarmup   2: 16777216 op, 717397093.00 ns, 42.7602 ns/op
WorkloadWarmup   3: 16777216 op, 706154887.00 ns, 42.0901 ns/op
WorkloadWarmup   4: 16777216 op, 700255971.00 ns, 41.7385 ns/op
WorkloadWarmup   5: 16777216 op, 711099361.00 ns, 42.3848 ns/op
WorkloadWarmup   6: 16777216 op, 700261558.00 ns, 41.7388 ns/op

// BeforeActualRun
WorkloadActual   1: 16777216 op, 702255027.00 ns, 41.8577 ns/op
WorkloadActual   2: 16777216 op, 701994719.00 ns, 41.8421 ns/op
WorkloadActual   3: 16777216 op, 703957813.00 ns, 41.9592 ns/op
WorkloadActual   4: 16777216 op, 714697489.00 ns, 42.5993 ns/op
WorkloadActual   5: 16777216 op, 711299843.00 ns, 42.3968 ns/op
WorkloadActual   6: 16777216 op, 706214144.00 ns, 42.0936 ns/op
WorkloadActual   7: 16777216 op, 701383581.00 ns, 41.8057 ns/op
WorkloadActual   8: 16777216 op, 701900972.00 ns, 41.8366 ns/op
WorkloadActual   9: 16777216 op, 699120515.00 ns, 41.6708 ns/op
WorkloadActual  10: 16777216 op, 703043627.00 ns, 41.9047 ns/op
WorkloadActual  11: 16777216 op, 706738576.00 ns, 42.1249 ns/op
WorkloadActual  12: 16777216 op, 701501593.00 ns, 41.8128 ns/op
WorkloadActual  13: 16777216 op, 701520864.00 ns, 41.8139 ns/op
WorkloadActual  14: 16777216 op, 701086680.00 ns, 41.7880 ns/op
WorkloadActual  15: 16777216 op, 704348929.00 ns, 41.9825 ns/op

// AfterActualRun
WorkloadResult   1: 16777216 op, 661115901.00 ns, 39.4056 ns/op
WorkloadResult   2: 16777216 op, 660855593.00 ns, 39.3901 ns/op
WorkloadResult   3: 16777216 op, 662818687.00 ns, 39.5071 ns/op
WorkloadResult   4: 16777216 op, 665075018.00 ns, 39.6416 ns/op
WorkloadResult   5: 16777216 op, 660244455.00 ns, 39.3536 ns/op
WorkloadResult   6: 16777216 op, 660761846.00 ns, 39.3845 ns/op
WorkloadResult   7: 16777216 op, 657981389.00 ns, 39.2187 ns/op
WorkloadResult   8: 16777216 op, 661904501.00 ns, 39.4526 ns/op
WorkloadResult   9: 16777216 op, 665599450.00 ns, 39.6728 ns/op
WorkloadResult  10: 16777216 op, 660362467.00 ns, 39.3607 ns/op
WorkloadResult  11: 16777216 op, 660381738.00 ns, 39.3618 ns/op
WorkloadResult  12: 16777216 op, 659947554.00 ns, 39.3359 ns/op
WorkloadResult  13: 16777216 op, 663209803.00 ns, 39.5304 ns/op
// GC:  278 0 0 1744831200 16777216
// Threading:  0 0 16777216

// AfterAll
// Benchmark Process 68556 has exited with code 0.

Mean = 39.432 ns, StdErr = 0.035 ns (0.09%), N = 13, StdDev = 0.127 ns
Min = 39.219 ns, Q1 = 39.361 ns, Median = 39.390 ns, Q3 = 39.507 ns, Max = 39.673 ns
IQR = 0.146 ns, LowerFence = 39.141 ns, UpperFence = 39.727 ns
ConfidenceInterval = [39.280 ns; 39.584 ns] (CI 99.9%), Margin = 0.152 ns (0.39% of Mean)
Skewness = 0.47, Kurtosis = 2.28, MValue = 2

// ** Remained 5 (62.5%) benchmark(s) to run. Estimated finish 2023-12-23 15:52 (0h 0m from now) **
// **************************
// Benchmark: LINQBenchmarks.withLinqSyntax: .NET 8.0(Runtime=.NET 8.0) [ArraySize=100]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 4dde07fa-57fc-4211-8dd2-6c5e96e4241b.dll --anonymousPipes 107 108 --benchmarkName "BenchmarkPlayground.Benchmarks.LINQBenchmarks.withLinqSyntax(ArraySize: 100)" --job ".NET 8.0" --benchmarkId 3 in /Users/syphonphilter/Projects/BenchmarkPlayground/CSharpBenchmarks/BenchmarkPlayground/bin/Release/net8.0/4dde07fa-57fc-4211-8dd2-6c5e96e4241b/bin/Release/net8.0
// Failed to set up high priority (Permission denied). In order to run benchmarks with high priority, make sure you have the right permissions.
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.13.11
// Runtime=.NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: .NET 8.0

OverheadJitting  1: 1 op, 407888.00 ns, 407.8880 us/op
WorkloadJitting  1: 1 op, 1252134.00 ns, 1.2521 ms/op

OverheadJitting  2: 16 op, 329864.00 ns, 20.6165 us/op
WorkloadJitting  2: 16 op, 542316.00 ns, 33.8948 us/op

WorkloadPilot    1: 16 op, 6940.00 ns, 433.7500 ns/op
WorkloadPilot    2: 32 op, 6901.00 ns, 215.6562 ns/op
WorkloadPilot    3: 64 op, 9213.00 ns, 143.9531 ns/op
WorkloadPilot    4: 128 op, 18023.00 ns, 140.8047 ns/op
WorkloadPilot    5: 256 op, 24333.00 ns, 95.0508 ns/op
WorkloadPilot    6: 512 op, 44106.00 ns, 86.1445 ns/op
WorkloadPilot    7: 1024 op, 88155.00 ns, 86.0889 ns/op
WorkloadPilot    8: 2048 op, 200708.00 ns, 98.0020 ns/op
WorkloadPilot    9: 4096 op, 463530.00 ns, 113.1665 ns/op
WorkloadPilot   10: 8192 op, 1018888.00 ns, 124.3760 ns/op
WorkloadPilot   11: 16384 op, 1882926.00 ns, 114.9247 ns/op
WorkloadPilot   12: 32768 op, 4307330.00 ns, 131.4493 ns/op
WorkloadPilot   13: 65536 op, 8174299.00 ns, 124.7299 ns/op
WorkloadPilot   14: 131072 op, 11556008.00 ns, 88.1653 ns/op
WorkloadPilot   15: 262144 op, 23807923.00 ns, 90.8200 ns/op
WorkloadPilot   16: 524288 op, 45336730.00 ns, 86.4729 ns/op
WorkloadPilot   17: 1048576 op, 89905897.00 ns, 85.7409 ns/op
WorkloadPilot   18: 2097152 op, 117424925.00 ns, 55.9926 ns/op
WorkloadPilot   19: 4194304 op, 199953737.00 ns, 47.6727 ns/op
WorkloadPilot   20: 8388608 op, 382816292.00 ns, 45.6353 ns/op
WorkloadPilot   21: 16777216 op, 760585318.00 ns, 45.3344 ns/op

OverheadWarmup   1: 16777216 op, 60865073.00 ns, 3.6278 ns/op
OverheadWarmup   2: 16777216 op, 61725707.00 ns, 3.6791 ns/op
OverheadWarmup   3: 16777216 op, 61499183.00 ns, 3.6656 ns/op
OverheadWarmup   4: 16777216 op, 46296443.00 ns, 2.7595 ns/op
OverheadWarmup   5: 16777216 op, 41595947.00 ns, 2.4793 ns/op
OverheadWarmup   6: 16777216 op, 41604888.00 ns, 2.4798 ns/op
OverheadWarmup   7: 16777216 op, 43350938.00 ns, 2.5839 ns/op
OverheadWarmup   8: 16777216 op, 47704254.00 ns, 2.8434 ns/op
OverheadWarmup   9: 16777216 op, 42221766.00 ns, 2.5166 ns/op

OverheadActual   1: 16777216 op, 41934516.00 ns, 2.4995 ns/op
OverheadActual   2: 16777216 op, 42001751.00 ns, 2.5035 ns/op
OverheadActual   3: 16777216 op, 42486656.00 ns, 2.5324 ns/op
OverheadActual   4: 16777216 op, 42096189.00 ns, 2.5091 ns/op
OverheadActual   5: 16777216 op, 42834651.00 ns, 2.5531 ns/op
OverheadActual   6: 16777216 op, 41728808.00 ns, 2.4872 ns/op
OverheadActual   7: 16777216 op, 41661235.00 ns, 2.4832 ns/op
OverheadActual   8: 16777216 op, 41900496.00 ns, 2.4975 ns/op
OverheadActual   9: 16777216 op, 41594645.00 ns, 2.4792 ns/op
OverheadActual  10: 16777216 op, 41784754.00 ns, 2.4906 ns/op
OverheadActual  11: 16777216 op, 42020628.00 ns, 2.5046 ns/op
OverheadActual  12: 16777216 op, 41848605.00 ns, 2.4944 ns/op
OverheadActual  13: 16777216 op, 41611299.00 ns, 2.4802 ns/op
OverheadActual  14: 16777216 op, 42158973.00 ns, 2.5129 ns/op
OverheadActual  15: 16777216 op, 41607461.00 ns, 2.4800 ns/op

WorkloadWarmup   1: 16777216 op, 765631733.00 ns, 45.6352 ns/op
WorkloadWarmup   2: 16777216 op, 762554985.00 ns, 45.4518 ns/op
WorkloadWarmup   3: 16777216 op, 764817097.00 ns, 45.5867 ns/op
WorkloadWarmup   4: 16777216 op, 762439351.00 ns, 45.4449 ns/op
WorkloadWarmup   5: 16777216 op, 761835069.00 ns, 45.4089 ns/op
WorkloadWarmup   6: 16777216 op, 763629685.00 ns, 45.5159 ns/op
WorkloadWarmup   7: 16777216 op, 759802168.00 ns, 45.2877 ns/op

// BeforeActualRun
WorkloadActual   1: 16777216 op, 766287549.00 ns, 45.6743 ns/op
WorkloadActual   2: 16777216 op, 760949645.00 ns, 45.3561 ns/op
WorkloadActual   3: 16777216 op, 786693018.00 ns, 46.8906 ns/op
WorkloadActual   4: 16777216 op, 763338046.00 ns, 45.4985 ns/op
WorkloadActual   5: 16777216 op, 760497616.00 ns, 45.3292 ns/op
WorkloadActual   6: 16777216 op, 766205615.00 ns, 45.6694 ns/op
WorkloadActual   7: 16777216 op, 761564786.00 ns, 45.3928 ns/op
WorkloadActual   8: 16777216 op, 757833432.00 ns, 45.1704 ns/op
WorkloadActual   9: 16777216 op, 759224297.00 ns, 45.2533 ns/op
WorkloadActual  10: 16777216 op, 765415880.00 ns, 45.6223 ns/op
WorkloadActual  11: 16777216 op, 762715064.00 ns, 45.4614 ns/op
WorkloadActual  12: 16777216 op, 757507810.00 ns, 45.1510 ns/op
WorkloadActual  13: 16777216 op, 758740890.00 ns, 45.2245 ns/op
WorkloadActual  14: 16777216 op, 759520817.00 ns, 45.2710 ns/op
WorkloadActual  15: 16777216 op, 759583658.00 ns, 45.2747 ns/op

// AfterActualRun
WorkloadResult   1: 16777216 op, 724387053.00 ns, 43.1768 ns/op
WorkloadResult   2: 16777216 op, 719049149.00 ns, 42.8587 ns/op
WorkloadResult   3: 16777216 op, 721437550.00 ns, 43.0010 ns/op
WorkloadResult   4: 16777216 op, 718597120.00 ns, 42.8317 ns/op
WorkloadResult   5: 16777216 op, 724305119.00 ns, 43.1719 ns/op
WorkloadResult   6: 16777216 op, 719664290.00 ns, 42.8953 ns/op
WorkloadResult   7: 16777216 op, 715932936.00 ns, 42.6729 ns/op
WorkloadResult   8: 16777216 op, 717323801.00 ns, 42.7558 ns/op
WorkloadResult   9: 16777216 op, 723515384.00 ns, 43.1249 ns/op
WorkloadResult  10: 16777216 op, 720814568.00 ns, 42.9639 ns/op
WorkloadResult  11: 16777216 op, 715607314.00 ns, 42.6535 ns/op
WorkloadResult  12: 16777216 op, 716840394.00 ns, 42.7270 ns/op
WorkloadResult  13: 16777216 op, 717620321.00 ns, 42.7735 ns/op
WorkloadResult  14: 16777216 op, 717683162.00 ns, 42.7772 ns/op
// GC:  278 0 0 1744831200 16777216
// Threading:  0 0 16777216

// AfterAll
// Benchmark Process 68569 has exited with code 0.

Mean = 42.885 ns, StdErr = 0.048 ns (0.11%), N = 14, StdDev = 0.178 ns
Min = 42.654 ns, Q1 = 42.760 ns, Median = 42.845 ns, Q3 = 42.992 ns, Max = 43.177 ns
IQR = 0.231 ns, LowerFence = 42.413 ns, UpperFence = 43.339 ns
ConfidenceInterval = [42.684 ns; 43.086 ns] (CI 99.9%), Margin = 0.201 ns (0.47% of Mean)
Skewness = 0.43, Kurtosis = 1.68, MValue = 2

// ** Remained 4 (50.0%) benchmark(s) to run. Estimated finish 2023-12-23 15:52 (0h 0m from now) **
// **************************
// Benchmark: LINQBenchmarks.withLinqQuery: Job-IRVNZL(IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0) [ArraySize=1000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 4dde07fa-57fc-4211-8dd2-6c5e96e4241b.dll --anonymousPipes 107 108 --benchmarkName "BenchmarkPlayground.Benchmarks.LINQBenchmarks.withLinqQuery(ArraySize: 1000)" --job "IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0" --benchmarkId 4 in /Users/syphonphilter/Projects/BenchmarkPlayground/CSharpBenchmarks/BenchmarkPlayground/bin/Release/net8.0/4dde07fa-57fc-4211-8dd2-6c5e96e4241b/bin/Release/net8.0
// Failed to set up high priority (Permission denied). In order to run benchmarks with high priority, make sure you have the right permissions.
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.13.11
// Runtime=.NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: Job-HTEEAW(IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0)


// BeforeActualRun
WorkloadActual   1: 1 op, 1659861.00 ns, 1.6599 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 1659861.00 ns, 1.6599 ms/op
// GC:  0 0 0 840 1
// Threading:  0 0 1

// AfterAll
// Benchmark Process 68583 has exited with code 0.

Mean = 1.660 ms, StdErr = 0.000 ms (0.00%), N = 1, StdDev = 0.000 ms
Min = 1.660 ms, Q1 = 1.660 ms, Median = 1.660 ms, Q3 = 1.660 ms, Max = 1.660 ms
IQR = 0.000 ms, LowerFence = 1.660 ms, UpperFence = 1.660 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// ** Remained 3 (37.5%) benchmark(s) to run. Estimated finish 2023-12-23 15:52 (0h 0m from now) **
// **************************
// Benchmark: LINQBenchmarks.withLinqSyntax: Job-IRVNZL(IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0) [ArraySize=1000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 4dde07fa-57fc-4211-8dd2-6c5e96e4241b.dll --anonymousPipes 107 108 --benchmarkName "BenchmarkPlayground.Benchmarks.LINQBenchmarks.withLinqSyntax(ArraySize: 1000)" --job "IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0" --benchmarkId 5 in /Users/syphonphilter/Projects/BenchmarkPlayground/CSharpBenchmarks/BenchmarkPlayground/bin/Release/net8.0/4dde07fa-57fc-4211-8dd2-6c5e96e4241b/bin/Release/net8.0
// Failed to set up high priority (Permission denied). In order to run benchmarks with high priority, make sure you have the right permissions.
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.13.11
// Runtime=.NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: Job-ACPEBO(IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0)


// BeforeActualRun
WorkloadActual   1: 1 op, 1584168.00 ns, 1.5842 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 1584168.00 ns, 1.5842 ms/op
// GC:  0 0 0 840 1
// Threading:  0 0 1

// AfterAll
// Benchmark Process 68584 has exited with code 0.

Mean = 1.584 ms, StdErr = 0.000 ms (0.00%), N = 1, StdDev = 0.000 ms
Min = 1.584 ms, Q1 = 1.584 ms, Median = 1.584 ms, Q3 = 1.584 ms, Max = 1.584 ms
IQR = 0.000 ms, LowerFence = 1.584 ms, UpperFence = 1.584 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2

// ** Remained 2 (25.0%) benchmark(s) to run. Estimated finish 2023-12-23 15:52 (0h 0m from now) **
// **************************
// Benchmark: LINQBenchmarks.withLinqQuery: .NET 8.0(Runtime=.NET 8.0) [ArraySize=1000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 4dde07fa-57fc-4211-8dd2-6c5e96e4241b.dll --anonymousPipes 107 108 --benchmarkName "BenchmarkPlayground.Benchmarks.LINQBenchmarks.withLinqQuery(ArraySize: 1000)" --job ".NET 8.0" --benchmarkId 6 in /Users/syphonphilter/Projects/BenchmarkPlayground/CSharpBenchmarks/BenchmarkPlayground/bin/Release/net8.0/4dde07fa-57fc-4211-8dd2-6c5e96e4241b/bin/Release/net8.0
// Failed to set up high priority (Permission denied). In order to run benchmarks with high priority, make sure you have the right permissions.
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.13.11
// Runtime=.NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: .NET 8.0

OverheadJitting  1: 1 op, 413429.00 ns, 413.4290 us/op
WorkloadJitting  1: 1 op, 1293292.00 ns, 1.2933 ms/op

OverheadJitting  2: 16 op, 369571.00 ns, 23.0982 us/op
WorkloadJitting  2: 16 op, 358757.00 ns, 22.4223 us/op

WorkloadPilot    1: 16 op, 5651.00 ns, 353.1875 ns/op
WorkloadPilot    2: 32 op, 6878.00 ns, 214.9375 ns/op
WorkloadPilot    3: 64 op, 8824.00 ns, 137.8750 ns/op
WorkloadPilot    4: 128 op, 13799.00 ns, 107.8047 ns/op
WorkloadPilot    5: 256 op, 22795.00 ns, 89.0430 ns/op
WorkloadPilot    6: 512 op, 43210.00 ns, 84.3945 ns/op
WorkloadPilot    7: 1024 op, 80801.00 ns, 78.9072 ns/op
WorkloadPilot    8: 2048 op, 187714.00 ns, 91.6572 ns/op
WorkloadPilot    9: 4096 op, 447666.00 ns, 109.2935 ns/op
WorkloadPilot   10: 8192 op, 937474.00 ns, 114.4377 ns/op
WorkloadPilot   11: 16384 op, 2085347.00 ns, 127.2795 ns/op
WorkloadPilot   12: 32768 op, 3584148.00 ns, 109.3795 ns/op
WorkloadPilot   13: 65536 op, 7604011.00 ns, 116.0280 ns/op
WorkloadPilot   14: 131072 op, 10649816.00 ns, 81.2516 ns/op
WorkloadPilot   15: 262144 op, 22380144.00 ns, 85.3735 ns/op
WorkloadPilot   16: 524288 op, 42700038.00 ns, 81.4439 ns/op
WorkloadPilot   17: 1048576 op, 64502531.00 ns, 61.5144 ns/op
WorkloadPilot   18: 2097152 op, 93647006.00 ns, 44.6544 ns/op
WorkloadPilot   19: 4194304 op, 179671254.00 ns, 42.8370 ns/op
WorkloadPilot   20: 8388608 op, 353062958.00 ns, 42.0884 ns/op
WorkloadPilot   21: 16777216 op, 701536287.00 ns, 41.8148 ns/op

OverheadWarmup   1: 16777216 op, 60928877.00 ns, 3.6316 ns/op
OverheadWarmup   2: 16777216 op, 61271930.00 ns, 3.6521 ns/op
OverheadWarmup   3: 16777216 op, 61449139.00 ns, 3.6627 ns/op
OverheadWarmup   4: 16777216 op, 47992673.00 ns, 2.8606 ns/op
OverheadWarmup   5: 16777216 op, 41116027.00 ns, 2.4507 ns/op
OverheadWarmup   6: 16777216 op, 41195390.00 ns, 2.4554 ns/op
OverheadWarmup   7: 16777216 op, 41139539.00 ns, 2.4521 ns/op

OverheadActual   1: 16777216 op, 41516104.00 ns, 2.4746 ns/op
OverheadActual   2: 16777216 op, 41358914.00 ns, 2.4652 ns/op
OverheadActual   3: 16777216 op, 41263379.00 ns, 2.4595 ns/op
OverheadActual   4: 16777216 op, 41231824.00 ns, 2.4576 ns/op
OverheadActual   5: 16777216 op, 41546518.00 ns, 2.4764 ns/op
OverheadActual   6: 16777216 op, 41072006.00 ns, 2.4481 ns/op
OverheadActual   7: 16777216 op, 41419825.00 ns, 2.4688 ns/op
OverheadActual   8: 16777216 op, 41189989.00 ns, 2.4551 ns/op
OverheadActual   9: 16777216 op, 41248816.00 ns, 2.4586 ns/op
OverheadActual  10: 16777216 op, 41157690.00 ns, 2.4532 ns/op
OverheadActual  11: 16777216 op, 41302429.00 ns, 2.4618 ns/op
OverheadActual  12: 16777216 op, 41061078.00 ns, 2.4474 ns/op
OverheadActual  13: 16777216 op, 41246173.00 ns, 2.4585 ns/op
OverheadActual  14: 16777216 op, 41402399.00 ns, 2.4678 ns/op
OverheadActual  15: 16777216 op, 41036597.00 ns, 2.4460 ns/op

WorkloadWarmup   1: 16777216 op, 701056106.00 ns, 41.7862 ns/op
WorkloadWarmup   2: 16777216 op, 700301992.00 ns, 41.7413 ns/op
WorkloadWarmup   3: 16777216 op, 701194321.00 ns, 41.7944 ns/op
WorkloadWarmup   4: 16777216 op, 704862757.00 ns, 42.0131 ns/op
WorkloadWarmup   5: 16777216 op, 697420527.00 ns, 41.5695 ns/op
WorkloadWarmup   6: 16777216 op, 700459107.00 ns, 41.7506 ns/op
WorkloadWarmup   7: 16777216 op, 705737419.00 ns, 42.0652 ns/op
WorkloadWarmup   8: 16777216 op, 698815938.00 ns, 41.6527 ns/op

// BeforeActualRun
WorkloadActual   1: 16777216 op, 696959948.00 ns, 41.5421 ns/op
WorkloadActual   2: 16777216 op, 701836022.00 ns, 41.8327 ns/op
WorkloadActual   3: 16777216 op, 699358464.00 ns, 41.6850 ns/op
WorkloadActual   4: 16777216 op, 694844231.00 ns, 41.4159 ns/op
WorkloadActual   5: 16777216 op, 704004050.00 ns, 41.9619 ns/op
WorkloadActual   6: 16777216 op, 697997652.00 ns, 41.6039 ns/op
WorkloadActual   7: 16777216 op, 696776464.00 ns, 41.5311 ns/op
WorkloadActual   8: 16777216 op, 639669097.00 ns, 38.1272 ns/op
WorkloadActual   9: 16777216 op, 493630190.00 ns, 29.4227 ns/op
WorkloadActual  10: 16777216 op, 480758999.00 ns, 28.6555 ns/op
WorkloadActual  11: 16777216 op, 460129519.00 ns, 27.4259 ns/op
WorkloadActual  12: 16777216 op, 473028274.00 ns, 28.1947 ns/op
WorkloadActual  13: 16777216 op, 494303210.00 ns, 29.4628 ns/op
WorkloadActual  14: 16777216 op, 475280038.00 ns, 28.3289 ns/op
WorkloadActual  15: 16777216 op, 461570987.00 ns, 27.5118 ns/op
WorkloadActual  16: 16777216 op, 456684865.00 ns, 27.2205 ns/op
WorkloadActual  17: 16777216 op, 455087691.00 ns, 27.1253 ns/op
WorkloadActual  18: 16777216 op, 453377244.00 ns, 27.0234 ns/op
WorkloadActual  19: 16777216 op, 446550011.00 ns, 26.6165 ns/op
WorkloadActual  20: 16777216 op, 444393644.00 ns, 26.4879 ns/op
WorkloadActual  21: 16777216 op, 455594442.00 ns, 27.1555 ns/op
WorkloadActual  22: 16777216 op, 453405489.00 ns, 27.0251 ns/op
WorkloadActual  23: 16777216 op, 485785879.00 ns, 28.9551 ns/op
WorkloadActual  24: 16777216 op, 470838699.00 ns, 28.0642 ns/op
WorkloadActual  25: 16777216 op, 491278333.00 ns, 29.2825 ns/op
WorkloadActual  26: 16777216 op, 454778694.00 ns, 27.1069 ns/op
WorkloadActual  27: 16777216 op, 439258876.00 ns, 26.1819 ns/op
WorkloadActual  28: 16777216 op, 435504776.00 ns, 25.9581 ns/op
WorkloadActual  29: 16777216 op, 448499239.00 ns, 26.7326 ns/op
WorkloadActual  30: 16777216 op, 437856444.00 ns, 26.0983 ns/op
WorkloadActual  31: 16777216 op, 445374854.00 ns, 26.5464 ns/op
WorkloadActual  32: 16777216 op, 446665276.00 ns, 26.6233 ns/op
WorkloadActual  33: 16777216 op, 438045562.00 ns, 26.1096 ns/op
WorkloadActual  34: 16777216 op, 435555983.00 ns, 25.9612 ns/op
WorkloadActual  35: 16777216 op, 440964245.00 ns, 26.2835 ns/op
WorkloadActual  36: 16777216 op, 474829142.00 ns, 28.3020 ns/op
WorkloadActual  37: 16777216 op, 447280089.00 ns, 26.6600 ns/op
WorkloadActual  38: 16777216 op, 446902613.00 ns, 26.6375 ns/op
WorkloadActual  39: 16777216 op, 439342922.00 ns, 26.1869 ns/op
WorkloadActual  40: 16777216 op, 466374269.00 ns, 27.7981 ns/op
WorkloadActual  41: 16777216 op, 448762261.00 ns, 26.7483 ns/op
WorkloadActual  42: 16777216 op, 440109457.00 ns, 26.2326 ns/op
WorkloadActual  43: 16777216 op, 439765419.00 ns, 26.2121 ns/op
WorkloadActual  44: 16777216 op, 446007270.00 ns, 26.5841 ns/op
WorkloadActual  45: 16777216 op, 446241002.00 ns, 26.5980 ns/op
WorkloadActual  46: 16777216 op, 433845979.00 ns, 25.8592 ns/op
WorkloadActual  47: 16777216 op, 442729803.00 ns, 26.3888 ns/op
WorkloadActual  48: 16777216 op, 466471860.00 ns, 27.8039 ns/op
WorkloadActual  49: 16777216 op, 433130255.00 ns, 25.8166 ns/op
WorkloadActual  50: 16777216 op, 441152997.00 ns, 26.2948 ns/op
WorkloadActual  51: 16777216 op, 440607765.00 ns, 26.2623 ns/op
WorkloadActual  52: 16777216 op, 438041909.00 ns, 26.1093 ns/op
WorkloadActual  53: 16777216 op, 439245705.00 ns, 26.1811 ns/op

// AfterActualRun
WorkloadResult   1: 16777216 op, 452381374.00 ns, 26.9640 ns/op
WorkloadResult   2: 16777216 op, 439510183.00 ns, 26.1968 ns/op
WorkloadResult   3: 16777216 op, 418880703.00 ns, 24.9672 ns/op
WorkloadResult   4: 16777216 op, 431779458.00 ns, 25.7361 ns/op
WorkloadResult   5: 16777216 op, 453054394.00 ns, 27.0041 ns/op
WorkloadResult   6: 16777216 op, 434031222.00 ns, 25.8703 ns/op
WorkloadResult   7: 16777216 op, 420322171.00 ns, 25.0532 ns/op
WorkloadResult   8: 16777216 op, 415436049.00 ns, 24.7619 ns/op
WorkloadResult   9: 16777216 op, 413838875.00 ns, 24.6667 ns/op
WorkloadResult  10: 16777216 op, 412128428.00 ns, 24.5648 ns/op
WorkloadResult  11: 16777216 op, 405301195.00 ns, 24.1578 ns/op
WorkloadResult  12: 16777216 op, 403144828.00 ns, 24.0293 ns/op
WorkloadResult  13: 16777216 op, 414345626.00 ns, 24.6969 ns/op
WorkloadResult  14: 16777216 op, 412156673.00 ns, 24.5665 ns/op
WorkloadResult  15: 16777216 op, 444537063.00 ns, 26.4965 ns/op
WorkloadResult  16: 16777216 op, 429589883.00 ns, 25.6056 ns/op
WorkloadResult  17: 16777216 op, 450029517.00 ns, 26.8238 ns/op
WorkloadResult  18: 16777216 op, 413529878.00 ns, 24.6483 ns/op
WorkloadResult  19: 16777216 op, 398010060.00 ns, 23.7232 ns/op
WorkloadResult  20: 16777216 op, 394255960.00 ns, 23.4995 ns/op
WorkloadResult  21: 16777216 op, 407250423.00 ns, 24.2740 ns/op
WorkloadResult  22: 16777216 op, 396607628.00 ns, 23.6397 ns/op
WorkloadResult  23: 16777216 op, 404126038.00 ns, 24.0878 ns/op
WorkloadResult  24: 16777216 op, 405416460.00 ns, 24.1647 ns/op
WorkloadResult  25: 16777216 op, 396796746.00 ns, 23.6509 ns/op
WorkloadResult  26: 16777216 op, 394307167.00 ns, 23.5025 ns/op
WorkloadResult  27: 16777216 op, 399715429.00 ns, 23.8249 ns/op
WorkloadResult  28: 16777216 op, 433580326.00 ns, 25.8434 ns/op
WorkloadResult  29: 16777216 op, 406031273.00 ns, 24.2013 ns/op
WorkloadResult  30: 16777216 op, 405653797.00 ns, 24.1789 ns/op
WorkloadResult  31: 16777216 op, 398094106.00 ns, 23.7283 ns/op
WorkloadResult  32: 16777216 op, 425125453.00 ns, 25.3395 ns/op
WorkloadResult  33: 16777216 op, 407513445.00 ns, 24.2897 ns/op
WorkloadResult  34: 16777216 op, 398860641.00 ns, 23.7739 ns/op
WorkloadResult  35: 16777216 op, 398516603.00 ns, 23.7534 ns/op
WorkloadResult  36: 16777216 op, 404758454.00 ns, 24.1255 ns/op
WorkloadResult  37: 16777216 op, 404992186.00 ns, 24.1394 ns/op
WorkloadResult  38: 16777216 op, 392597163.00 ns, 23.4006 ns/op
WorkloadResult  39: 16777216 op, 401480987.00 ns, 23.9301 ns/op
WorkloadResult  40: 16777216 op, 425223044.00 ns, 25.3453 ns/op
WorkloadResult  41: 16777216 op, 391881439.00 ns, 23.3580 ns/op
WorkloadResult  42: 16777216 op, 399904181.00 ns, 23.8361 ns/op
WorkloadResult  43: 16777216 op, 399358949.00 ns, 23.8036 ns/op
WorkloadResult  44: 16777216 op, 396793093.00 ns, 23.6507 ns/op
WorkloadResult  45: 16777216 op, 397996889.00 ns, 23.7225 ns/op
// GC:  278 0 0 1744831200 16777216
// Threading:  0 0 16777216

// AfterAll
// Benchmark Process 68587 has exited with code 0.

Mean = 24.569 ns, StdErr = 0.151 ns (0.62%), N = 45, StdDev = 1.016 ns
Min = 23.358 ns, Q1 = 23.774 ns, Median = 24.179 ns, Q3 = 25.053 ns, Max = 27.004 ns
IQR = 1.279 ns, LowerFence = 21.855 ns, UpperFence = 26.972 ns
ConfidenceInterval = [24.035 ns; 25.103 ns] (CI 99.9%), Margin = 0.534 ns (2.17% of Mean)
Skewness = 0.97, Kurtosis = 2.85, MValue = 2

// ** Remained 1 (12.5%) benchmark(s) to run. Estimated finish 2023-12-23 15:52 (0h 0m from now) **
// **************************
// Benchmark: LINQBenchmarks.withLinqSyntax: .NET 8.0(Runtime=.NET 8.0) [ArraySize=1000]
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 4dde07fa-57fc-4211-8dd2-6c5e96e4241b.dll --anonymousPipes 107 108 --benchmarkName "BenchmarkPlayground.Benchmarks.LINQBenchmarks.withLinqSyntax(ArraySize: 1000)" --job ".NET 8.0" --benchmarkId 7 in /Users/syphonphilter/Projects/BenchmarkPlayground/CSharpBenchmarks/BenchmarkPlayground/bin/Release/net8.0/4dde07fa-57fc-4211-8dd2-6c5e96e4241b/bin/Release/net8.0
// Failed to set up high priority (Permission denied). In order to run benchmarks with high priority, make sure you have the right permissions.
// BeforeAnythingElse

// Benchmark Process Environment Information:
// BenchmarkDotNet v0.13.11
// Runtime=.NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: .NET 8.0

OverheadJitting  1: 1 op, 453131.00 ns, 453.1310 us/op
WorkloadJitting  1: 1 op, 1160034.00 ns, 1.1600 ms/op

OverheadJitting  2: 16 op, 317657.00 ns, 19.8536 us/op
WorkloadJitting  2: 16 op, 361927.00 ns, 22.6204 us/op

WorkloadPilot    1: 16 op, 5578.00 ns, 348.6250 ns/op
WorkloadPilot    2: 32 op, 5069.00 ns, 158.4062 ns/op
WorkloadPilot    3: 64 op, 7710.00 ns, 120.4688 ns/op
WorkloadPilot    4: 128 op, 12938.00 ns, 101.0781 ns/op
WorkloadPilot    5: 256 op, 22500.00 ns, 87.8906 ns/op
WorkloadPilot    6: 512 op, 40785.00 ns, 79.6582 ns/op
WorkloadPilot    7: 1024 op, 76222.00 ns, 74.4355 ns/op
WorkloadPilot    8: 2048 op, 180615.00 ns, 88.1909 ns/op
WorkloadPilot    9: 4096 op, 440814.00 ns, 107.6206 ns/op
WorkloadPilot   10: 8192 op, 837427.00 ns, 102.2250 ns/op
WorkloadPilot   11: 16384 op, 1667148.00 ns, 101.7546 ns/op
WorkloadPilot   12: 32768 op, 3377242.00 ns, 103.0652 ns/op
WorkloadPilot   13: 65536 op, 6851626.00 ns, 104.5475 ns/op
WorkloadPilot   14: 131072 op, 10440616.00 ns, 79.6556 ns/op
WorkloadPilot   15: 262144 op, 20360328.00 ns, 77.6685 ns/op
WorkloadPilot   16: 524288 op, 39833747.00 ns, 75.9768 ns/op
WorkloadPilot   17: 1048576 op, 68557442.00 ns, 65.3815 ns/op
WorkloadPilot   18: 2097152 op, 66310422.00 ns, 31.6193 ns/op
WorkloadPilot   19: 4194304 op, 128194274.00 ns, 30.5639 ns/op
WorkloadPilot   20: 8388608 op, 248890854.00 ns, 29.6701 ns/op
WorkloadPilot   21: 16777216 op, 491156603.00 ns, 29.2752 ns/op
WorkloadPilot   22: 33554432 op, 971998878.00 ns, 28.9678 ns/op

OverheadWarmup   1: 33554432 op, 81441395.00 ns, 2.4271 ns/op
OverheadWarmup   2: 33554432 op, 78788915.00 ns, 2.3481 ns/op
OverheadWarmup   3: 33554432 op, 67601295.00 ns, 2.0147 ns/op
OverheadWarmup   4: 33554432 op, 53720376.00 ns, 1.6010 ns/op
OverheadWarmup   5: 33554432 op, 53750381.00 ns, 1.6019 ns/op
OverheadWarmup   6: 33554432 op, 53592212.00 ns, 1.5972 ns/op
OverheadWarmup   7: 33554432 op, 53408609.00 ns, 1.5917 ns/op
OverheadWarmup   8: 33554432 op, 53098984.00 ns, 1.5825 ns/op
OverheadWarmup   9: 33554432 op, 54213204.00 ns, 1.6157 ns/op
OverheadWarmup  10: 33554432 op, 54095414.00 ns, 1.6122 ns/op

OverheadActual   1: 33554432 op, 54060775.00 ns, 1.6111 ns/op
OverheadActual   2: 33554432 op, 53104740.00 ns, 1.5826 ns/op
OverheadActual   3: 33554432 op, 54510465.00 ns, 1.6245 ns/op
OverheadActual   4: 33554432 op, 53036231.00 ns, 1.5806 ns/op
OverheadActual   5: 33554432 op, 53780398.00 ns, 1.6028 ns/op
OverheadActual   6: 33554432 op, 53515929.00 ns, 1.5949 ns/op
OverheadActual   7: 33554432 op, 54053379.00 ns, 1.6109 ns/op
OverheadActual   8: 33554432 op, 54759286.00 ns, 1.6320 ns/op
OverheadActual   9: 33554432 op, 53424874.00 ns, 1.5922 ns/op
OverheadActual  10: 33554432 op, 53631238.00 ns, 1.5983 ns/op
OverheadActual  11: 33554432 op, 53279324.00 ns, 1.5878 ns/op
OverheadActual  12: 33554432 op, 54067541.00 ns, 1.6113 ns/op
OverheadActual  13: 33554432 op, 53581159.00 ns, 1.5968 ns/op
OverheadActual  14: 33554432 op, 53760623.00 ns, 1.6022 ns/op
OverheadActual  15: 33554432 op, 53791702.00 ns, 1.6031 ns/op

WorkloadWarmup   1: 33554432 op, 993949201.00 ns, 29.6220 ns/op
WorkloadWarmup   2: 33554432 op, 975375281.00 ns, 29.0684 ns/op
WorkloadWarmup   3: 33554432 op, 965513640.00 ns, 28.7745 ns/op
WorkloadWarmup   4: 33554432 op, 988394617.00 ns, 29.4565 ns/op
WorkloadWarmup   5: 33554432 op, 962156489.00 ns, 28.6745 ns/op
WorkloadWarmup   6: 33554432 op, 957690318.00 ns, 28.5414 ns/op
WorkloadWarmup   7: 33554432 op, 970211450.00 ns, 28.9146 ns/op
WorkloadWarmup   8: 33554432 op, 964155839.00 ns, 28.7341 ns/op

// BeforeActualRun
WorkloadActual   1: 33554432 op, 973545523.00 ns, 29.0139 ns/op
WorkloadActual   2: 33554432 op, 969409093.00 ns, 28.8906 ns/op
WorkloadActual   3: 33554432 op, 983968794.00 ns, 29.3246 ns/op
WorkloadActual   4: 33554432 op, 1009219715.00 ns, 30.0771 ns/op
WorkloadActual   5: 33554432 op, 1023200459.00 ns, 30.4937 ns/op
WorkloadActual   6: 33554432 op, 1002615573.00 ns, 29.8803 ns/op
WorkloadActual   7: 33554432 op, 989818859.00 ns, 29.4989 ns/op
WorkloadActual   8: 33554432 op, 985751701.00 ns, 29.3777 ns/op
WorkloadActual   9: 33554432 op, 978950422.00 ns, 29.1750 ns/op
WorkloadActual  10: 33554432 op, 976271538.00 ns, 29.0952 ns/op
WorkloadActual  11: 33554432 op, 970301903.00 ns, 28.9173 ns/op
WorkloadActual  12: 33554432 op, 979082834.00 ns, 29.1789 ns/op
WorkloadActual  13: 33554432 op, 1019888240.00 ns, 30.3950 ns/op
WorkloadActual  14: 33554432 op, 981498712.00 ns, 29.2509 ns/op
WorkloadActual  15: 33554432 op, 977194621.00 ns, 29.1227 ns/op

// AfterActualRun
WorkloadResult   1: 33554432 op, 919784900.00 ns, 27.4117 ns/op
WorkloadResult   2: 33554432 op, 915648470.00 ns, 27.2885 ns/op
WorkloadResult   3: 33554432 op, 930208171.00 ns, 27.7224 ns/op
WorkloadResult   4: 33554432 op, 955459092.00 ns, 28.4749 ns/op
WorkloadResult   5: 33554432 op, 969439836.00 ns, 28.8916 ns/op
WorkloadResult   6: 33554432 op, 948854950.00 ns, 28.2781 ns/op
WorkloadResult   7: 33554432 op, 936058236.00 ns, 27.8967 ns/op
WorkloadResult   8: 33554432 op, 931991078.00 ns, 27.7755 ns/op
WorkloadResult   9: 33554432 op, 925189799.00 ns, 27.5728 ns/op
WorkloadResult  10: 33554432 op, 922510915.00 ns, 27.4930 ns/op
WorkloadResult  11: 33554432 op, 916541280.00 ns, 27.3151 ns/op
WorkloadResult  12: 33554432 op, 925322211.00 ns, 27.5768 ns/op
WorkloadResult  13: 33554432 op, 966127617.00 ns, 28.7928 ns/op
WorkloadResult  14: 33554432 op, 927738089.00 ns, 27.6487 ns/op
WorkloadResult  15: 33554432 op, 923433998.00 ns, 27.5205 ns/op
// GC:  556 0 0 3489661664 33554432
// Threading:  0 0 33554432

// AfterAll
// Benchmark Process 68613 has exited with code 0.

Mean = 27.844 ns, StdErr = 0.134 ns (0.48%), N = 15, StdDev = 0.520 ns
Min = 27.288 ns, Q1 = 27.507 ns, Median = 27.649 ns, Q3 = 28.087 ns, Max = 28.892 ns
IQR = 0.581 ns, LowerFence = 26.636 ns, UpperFence = 28.958 ns
ConfidenceInterval = [27.287 ns; 28.400 ns] (CI 99.9%), Margin = 0.556 ns (2.00% of Mean)
Skewness = 0.86, Kurtosis = 2.23, MValue = 2

// ** Remained 0 (0.0%) benchmark(s) to run. Estimated finish 2023-12-23 15:53 (0h 0m from now) **
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts/results/BenchmarkPlayground.Benchmarks.LINQBenchmarks-report.csv
  BenchmarkDotNet.Artifacts/results/BenchmarkPlayground.Benchmarks.LINQBenchmarks-report-github.md
  BenchmarkDotNet.Artifacts/results/BenchmarkPlayground.Benchmarks.LINQBenchmarks-report.html
  BenchmarkDotNet.Artifacts/results/BenchmarkPlayground.Benchmarks.LINQBenchmarks-measurements.csv
RPlotExporter couldn't find Rscript in your PATH and no R_HOME environment variable is defined
  BenchmarkDotNet.Artifacts/results/BuildPlots.R

// * Detailed results *
LINQBenchmarks.withLinqQuery: Job-IRVNZL(IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0) [ArraySize=100]
Runtime = .NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 1.564 ms, StdErr = 0.000 ms (0.00%), N = 1, StdDev = 0.000 ms
Min = 1.564 ms, Q1 = 1.564 ms, Median = 1.564 ms, Q3 = 1.564 ms, Max = 1.564 ms
IQR = 0.000 ms, LowerFence = 1.564 ms, UpperFence = 1.564 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[1.564 ms ; 1.564 ms) | @
---------------------------------------------------

LINQBenchmarks.withLinqQuery: .NET 8.0(Runtime=.NET 8.0) [ArraySize=100]
Runtime = .NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 39.432 ns, StdErr = 0.035 ns (0.09%), N = 13, StdDev = 0.127 ns
Min = 39.219 ns, Q1 = 39.361 ns, Median = 39.390 ns, Q3 = 39.507 ns, Max = 39.673 ns
IQR = 0.146 ns, LowerFence = 39.141 ns, UpperFence = 39.727 ns
ConfidenceInterval = [39.280 ns; 39.584 ns] (CI 99.9%), Margin = 0.152 ns (0.39% of Mean)
Skewness = 0.47, Kurtosis = 2.28, MValue = 2
-------------------- Histogram --------------------
[39.148 ns ; 39.744 ns) | @@@@@@@@@@@@@
---------------------------------------------------

LINQBenchmarks.withLinqSyntax: Job-IRVNZL(IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0) [ArraySize=100]
Runtime = .NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 1.558 ms, StdErr = 0.000 ms (0.00%), N = 1, StdDev = 0.000 ms
Min = 1.558 ms, Q1 = 1.558 ms, Median = 1.558 ms, Q3 = 1.558 ms, Max = 1.558 ms
IQR = 0.000 ms, LowerFence = 1.558 ms, UpperFence = 1.558 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[1.558 ms ; 1.558 ms) | @
---------------------------------------------------

LINQBenchmarks.withLinqSyntax: .NET 8.0(Runtime=.NET 8.0) [ArraySize=100]
Runtime = .NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 42.885 ns, StdErr = 0.048 ns (0.11%), N = 14, StdDev = 0.178 ns
Min = 42.654 ns, Q1 = 42.760 ns, Median = 42.845 ns, Q3 = 42.992 ns, Max = 43.177 ns
IQR = 0.231 ns, LowerFence = 42.413 ns, UpperFence = 43.339 ns
ConfidenceInterval = [42.684 ns; 43.086 ns] (CI 99.9%), Margin = 0.201 ns (0.47% of Mean)
Skewness = 0.43, Kurtosis = 1.68, MValue = 2
-------------------- Histogram --------------------
[42.556 ns ; 43.274 ns) | @@@@@@@@@@@@@@
---------------------------------------------------

LINQBenchmarks.withLinqQuery: Job-IRVNZL(IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0) [ArraySize=1000]
Runtime = .NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 1.660 ms, StdErr = 0.000 ms (0.00%), N = 1, StdDev = 0.000 ms
Min = 1.660 ms, Q1 = 1.660 ms, Median = 1.660 ms, Q3 = 1.660 ms, Max = 1.660 ms
IQR = 0.000 ms, LowerFence = 1.660 ms, UpperFence = 1.660 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[1.660 ms ; 1.660 ms) | @
---------------------------------------------------

LINQBenchmarks.withLinqQuery: .NET 8.0(Runtime=.NET 8.0) [ArraySize=1000]
Runtime = .NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 24.569 ns, StdErr = 0.151 ns (0.62%), N = 45, StdDev = 1.016 ns
Min = 23.358 ns, Q1 = 23.774 ns, Median = 24.179 ns, Q3 = 25.053 ns, Max = 27.004 ns
IQR = 1.279 ns, LowerFence = 21.855 ns, UpperFence = 26.972 ns
ConfidenceInterval = [24.035 ns; 25.103 ns] (CI 99.9%), Margin = 0.534 ns (2.17% of Mean)
Skewness = 0.97, Kurtosis = 2.85, MValue = 2
-------------------- Histogram --------------------
[22.983 ns ; 23.590 ns) | @@@@
[23.590 ns ; 24.340 ns) | @@@@@@@@@@@@@@@@@@@@@@
[24.340 ns ; 25.184 ns) | @@@@@@@@
[25.184 ns ; 25.980 ns) | @@@@@@
[25.980 ns ; 27.125 ns) | @@@@@
---------------------------------------------------

LINQBenchmarks.withLinqSyntax: Job-IRVNZL(IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0) [ArraySize=1000]
Runtime = .NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 1.584 ms, StdErr = 0.000 ms (0.00%), N = 1, StdDev = 0.000 ms
Min = 1.584 ms, Q1 = 1.584 ms, Median = 1.584 ms, Q3 = 1.584 ms, Max = 1.584 ms
IQR = 0.000 ms, LowerFence = 1.584 ms, UpperFence = 1.584 ms
ConfidenceInterval = [NaN ms; NaN ms] (CI 99.9%), Margin = NaN ms (NaN% of Mean)
Skewness = NaN, Kurtosis = NaN, MValue = 2
-------------------- Histogram --------------------
[1.584 ms ; 1.584 ms) | @
---------------------------------------------------

LINQBenchmarks.withLinqSyntax: .NET 8.0(Runtime=.NET 8.0) [ArraySize=1000]
Runtime = .NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 27.844 ns, StdErr = 0.134 ns (0.48%), N = 15, StdDev = 0.520 ns
Min = 27.288 ns, Q1 = 27.507 ns, Median = 27.649 ns, Q3 = 28.087 ns, Max = 28.892 ns
IQR = 0.581 ns, LowerFence = 26.636 ns, UpperFence = 28.958 ns
ConfidenceInterval = [27.287 ns; 28.400 ns] (CI 99.9%), Margin = 0.556 ns (2.00% of Mean)
Skewness = 0.86, Kurtosis = 2.23, MValue = 2
-------------------- Histogram --------------------
[27.255 ns ; 28.970 ns) | @@@@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet v0.13.11, macOS Sonoma 14.1 (23B73) [Darwin 23.1.0]
Intel Core i7-9750H CPU 2.60GHz, 1 CPU, 12 logical and 6 physical cores
.NET SDK 8.0.100
  [Host]     : .NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2
  Job-IRVNZL : .NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2
  .NET 8.0   : .NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2

Runtime=.NET 8.0  

| Method         | Job        | IterationCount | LaunchCount | RunStrategy | UnrollFactor | WarmupCount | ArraySize | Mean            | Error    | StdDev   | Ratio     | Gen0   | Allocated | Alloc Ratio |
|--------------- |----------- |--------------- |------------ |------------ |------------- |------------ |---------- |----------------:|---------:|---------:|----------:|-------:|----------:|------------:|
| withLinqQuery  | Job-IRVNZL | 1              | 1           | Monitoring  | 1            | 0           | 100       | 1,563,832.00 ns |       NA | 0.000 ns | 39,685.55 |      - |     840 B |        8.08 |
| withLinqQuery  | .NET 8.0   | Default        | Default     | Default     | 16           | Default     | 100       |        39.43 ns | 0.152 ns | 0.127 ns |      1.00 | 0.0166 |     104 B |        1.00 |
|                |            |                |             |             |              |             |           |                 |          |          |           |        |           |             |
| withLinqSyntax | Job-IRVNZL | 1              | 1           | Monitoring  | 1            | 0           | 100       | 1,558,430.00 ns |       NA | 0.000 ns | 36,094.12 |      - |     840 B |        8.08 |
| withLinqSyntax | .NET 8.0   | Default        | Default     | Default     | 16           | Default     | 100       |        42.88 ns | 0.201 ns | 0.178 ns |      1.00 | 0.0166 |     104 B |        1.00 |
|                |            |                |             |             |              |             |           |                 |          |          |           |        |           |             |
| withLinqQuery  | Job-IRVNZL | 1              | 1           | Monitoring  | 1            | 0           | 1000      | 1,659,861.00 ns |       NA | 0.000 ns | 61,558.34 |      - |     840 B |        8.08 |
| withLinqQuery  | .NET 8.0   | Default        | Default     | Default     | 16           | Default     | 1000      |        24.57 ns | 0.534 ns | 1.016 ns |      1.00 | 0.0166 |     104 B |        1.00 |
|                |            |                |             |             |              |             |           |                 |          |          |           |        |           |             |
| withLinqSyntax | Job-IRVNZL | 1              | 1           | Monitoring  | 1            | 0           | 1000      | 1,584,168.00 ns |       NA | 0.000 ns | 57,791.62 |      - |     840 B |        8.08 |
| withLinqSyntax | .NET 8.0   | Default        | Default     | Default     | 16           | Default     | 1000      |        27.84 ns | 0.556 ns | 0.520 ns |      1.00 | 0.0166 |     104 B |        1.00 |

// * Warnings *
MinIterationTime
  LINQBenchmarks.withLinqQuery: IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0  -> The minimum observed iteration time is 1.5638 ms which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LINQBenchmarks.withLinqSyntax: IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0 -> The minimum observed iteration time is 1.5584 ms which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LINQBenchmarks.withLinqQuery: IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0  -> The minimum observed iteration time is 1.6599 ms which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.
  LINQBenchmarks.withLinqSyntax: IterationCount=1, LaunchCount=1, RunStrategy=Monitoring, WarmupCount=0 -> The minimum observed iteration time is 1.5842 ms which is very small. It's recommended to increase it to at least 100.0000 ms using more operations.

// * Hints *
Outliers
  LINQBenchmarks.withLinqQuery: .NET 8.0  -> 2 outliers were removed (42.40 ns, 42.60 ns)
  LINQBenchmarks.withLinqSyntax: .NET 8.0 -> 1 outlier  was  removed (46.89 ns)
  LINQBenchmarks.withLinqQuery: .NET 8.0  -> 8 outliers were removed (38.13 ns..41.96 ns)

// * Legends *
  ArraySize   : Value of the 'ArraySize' parameter
  Mean        : Arithmetic mean of all measurements
  Error       : Half of 99.9% confidence interval
  StdDev      : Standard deviation of all measurements
  Ratio       : Mean of the ratio distribution ([Current]/[Baseline])
  Gen0        : GC Generation 0 collects per 1000 operations
  Allocated   : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  Alloc Ratio : Allocated memory ratio distribution ([Current]/[Baseline])
  1 ns        : 1 Nanosecond (0.000000001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
Run time: 00:01:42 (102.5 sec), executed benchmarks: 8

Global total time: 00:01:50 (110.22 sec), executed benchmarks: 8
// * Artifacts cleanup *
Artifacts cleanup is finished
